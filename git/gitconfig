[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[branch]
  autosetuprebase = always

[color]
  branch = auto
  diff = auto
  status = auto
  showbranch = auto
  ui = true

[color "branch"]
  current = green bold
  local = green
  remote = yellow

[color "diff"]
  meta = yellow bold
  frag = magenta bold                             # line info
  old = red                                       # deletions
  new = green                                     # additions

[color "status"]
  added = green reverse
  changed = yellow reverse
  untracked = red reverse

[core]
  attributesfile = ~/.gitattributes
  autocrlf = input
  editor = nvim
  excludesfile = ~/.gitignore

  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false

  # Make `git rebase` safer on macOS
  # http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
  trustctime = false

  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space,cr-at-eol

[commit]
  gpgsign = true

[diff]
  # Enable an experimental heuristic that shifts the hunk boundary in an
  # attempt to make the resulting patch easier to read.
  indentHeuristic = true

  # Detect copies as well as renames
  renames = copies

[fetch]
  prune = true

[gpg]
  program = /usr/local/bin/gpg

[help]
  autocorrect = 30

[http]
  postBuffer = 134217728

[include]
  path = ~/.gitconfig.local

[pager]
  diff = diff-so-fancy | less --tabs=1,5 -RFX
  show = diff-so-fancy | less --tabs=1,5 -RFX

[pretty]
  custom = "%C(red)%h%C(yellow)%d %C(reset)%s %C(bold blue)<%an> %C(green)(%cr)"
  #                 │           │           │                │              └─ date (relative)
  #                 │           │           │                └─ author name
  #                 │           │           └─ message
  #                 │           └─ decorations (branch, heads or tags)
  #                 └─ hash (abbreviated)

[pull]
  rebase = true

[push]
  # Make `git push` automatically push relevant
  # annotated tags when pushing branches out
  followTags = true

  # Make `git push` push only the current branch
  default = simple

[user]
  useConfigOnly = true
